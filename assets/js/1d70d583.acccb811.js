"use strict";(self.webpackChunkcf_infra_docs=self.webpackChunkcf_infra_docs||[]).push([[504],{67873:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>d});var r=s(85893),t=s(11151);const o={title:"Miscellaneous",sidebar_position:27},i="Miscellaneous",a={id:"misc/index",title:"Miscellaneous",description:"Glossary",source:"@site/docs/misc/index.md",sourceDirName:"misc",slug:"/misc/",permalink:"/docs/misc/",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:27,frontMatter:{title:"Miscellaneous",sidebar_position:27},sidebar:"defaultSidebar",previous:{title:"2016-04-15",permalink:"/docs/orga/minutes/2016-04-15"},next:{title:"Contracting Information",permalink:"/docs/contracting/"}},c={},d=[{value:"Glossary",id:"glossary",level:2}];function l(e){const n={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",p:"p",strong:"strong",...(0,t.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{id:"miscellaneous"})}),"\n",(0,r.jsx)(n.h1,{id:"miscellaneous",children:"Miscellaneous"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{id:"misc-glossary"})}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{id:"glossary"})}),"\n",(0,r.jsx)(n.h2,{id:"glossary",children:"Glossary"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{id:"term-Conda-package"})}),"\n",(0,r.jsxs)(n.p,{children:["Conda package\n",(0,r.jsx)(n.br,{}),(0,r.jsx)(n.strong,{children:"C"}),"onda ",(0,r.jsx)(n.strong,{children:"P"}),"ackage. A conda package is a ",(0,r.jsx)(n.code,{children:".tar.bz2"})," or ",(0,r.jsx)(n.code,{children:".conda"})," archive that contains libraries, executable programs, data files and other components, as well as metadata under the ",(0,r.jsx)(n.code,{children:"info/"})," directory. Its contents are unpacked in the installation prefix. ",(0,r.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Conda_(package_manager)",children:"Learn More"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{id:"term-Conda-channel"})}),"\n",(0,r.jsxs)(n.p,{children:["Conda channel\n",(0,r.jsx)(n.br,{}),(0,r.jsx)(n.strong,{children:"C"}),"onda ",(0,r.jsx)(n.strong,{children:"C"}),"hannel. Conda channels are the locations where packages are stored. They serve as the base for hosting and managing packages. ",(0,r.jsx)(n.code,{children:"conda-forge"})," is one example of a conda channel. ",(0,r.jsx)(n.a,{href:"https://docs.conda.io/projects/conda/en/latest/user-guide/concepts/channels.html",children:"Learn More"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{id:"term-Environment"})}),"\n",(0,r.jsxs)(n.p,{children:["Environment\n",(0,r.jsx)(n.br,{}),"An environment is a tool that helps to keep dependencies required by different projects separate by creating isolated spaces where these dependencies are installed. ",(0,r.jsx)(n.a,{href:"https://docs.conda.io/projects/conda/en/latest/user-guide/concepts/environments.html",children:"Learn More"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{id:"term-CI"})}),"\n",(0,r.jsxs)(n.p,{children:["CI\n",(0,r.jsx)(n.br,{}),(0,r.jsx)(n.strong,{children:"C"}),"ontinuous ",(0,r.jsx)(n.strong,{children:"I"}),"ntegration. Continuous integration is the practice of automating the integration of code changes from multiple contributors into a single software project. ",(0,r.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Continuous_integration",children:"Learn More"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{id:"term-PR"})}),"\n",(0,r.jsxs)(n.p,{children:["PR\n",(0,r.jsx)(n.br,{}),(0,r.jsx)(n.strong,{children:"P"}),"ull ",(0,r.jsx)(n.strong,{children:"R"}),"equest. Pull Request is a workflow method to submit contributions to an open development project in which the developer asks for changes committed to an external repository to be considered for inclusion in a project's main repository. ",(0,r.jsx)(n.a,{href:"https://help.github.com/articles/about-pull-requests/",children:"Learn More"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{id:"term-CDT"})}),"\n",(0,r.jsxs)(n.p,{children:["CDT\n",(0,r.jsx)(n.br,{}),(0,r.jsx)(n.strong,{children:"C"}),"ore ",(0,r.jsx)(n.strong,{children:"D"}),"ependency ",(0,r.jsx)(n.strong,{children:"T"}),"ree. Core Dependency Tree packages take care of the dependencies which are so close to the system that they are not packaged with conda-forge. A CDT package consists of repackaged CentOS binaries from the appropriate version, either 6 or 7 depending on user choice and platform. ",(0,r.jsx)(n.a,{href:"/docs/maintainer/knowledge_base#cdt-packages",children:"Learn more"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{id:"term-ABI"})}),"\n",(0,r.jsxs)(n.p,{children:["ABI\n",(0,r.jsx)(n.br,{}),(0,r.jsx)(n.strong,{children:"A"}),"pplication ",(0,r.jsx)(n.strong,{children:"B"}),"inary ",(0,r.jsx)(n.strong,{children:"I"}),"nterface. ABI is a document that comprehensively defines the binary system interface between applications and the operating system on which they run. ",(0,r.jsx)(n.a,{href:"https://en.wikipedia.org/wiki/Application_binary_interface",children:"Learn More"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{id:"term-ICU"})}),"\n",(0,r.jsxs)(n.p,{children:["ICU\n",(0,r.jsx)(n.br,{}),(0,r.jsx)(n.strong,{children:"I"}),"nternational ",(0,r.jsx)(n.strong,{children:"C"}),"omponents for ",(0,r.jsx)(n.strong,{children:"U"}),"nicode. ICU is an open-source project of mature C/C++ and Java libraries for Unicode support, software internationalization, and software globalization. ",(0,r.jsx)(n.a,{href:"https://icu.unicode.org/",children:"Learn More"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{id:"term-CRAN"})}),"\n",(0,r.jsxs)(n.p,{children:["CRAN\n",(0,r.jsx)(n.br,{}),(0,r.jsx)(n.strong,{children:"C"}),"omprehensive ",(0,r.jsx)(n.strong,{children:"R"})," ",(0,r.jsx)(n.strong,{children:"A"}),"rchive ",(0,r.jsx)(n.strong,{children:"N"}),"etwork. CRAN is a network of FTP and web servers around the world that store identical, up-to-date, versions of code and documentation for R. ",(0,r.jsx)(n.a,{href:"https://cran.r-project.org/",children:"Learn More"}),"."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.a,{id:"term-CFEP"})}),"\n",(0,r.jsxs)(n.p,{children:["CFEP\n",(0,r.jsx)(n.br,{}),(0,r.jsx)(n.strong,{children:"C"}),"onda ",(0,r.jsx)(n.strong,{children:"F"}),"orge ",(0,r.jsx)(n.strong,{children:"E"}),"nhancement ",(0,r.jsx)(n.strong,{children:"P"}),"roposal. A CFEP is a document which outlines a suggested change to how the conda-forge project operates, from a technical standpoint as well as to address social topics such as governance and expected conduct. ",(0,r.jsx)(n.a,{href:"https://github.com/conda-forge/cfep/blob/main/cfep-01.md/",children:"Learn More"}),"."]})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},11151:(e,n,s)=>{s.d(n,{Z:()=>a,a:()=>i});var r=s(67294);const t={},o=r.createContext(t);function i(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);